<?php
/*
 * Copyright 2023 (c) Neo-OOH - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Valentin Dufois <vdufois@neo-ooh.com>
 *
 * @neo/api - HasView.php
 */

namespace Neo\Models\Traits;

use Illuminate\Database\Eloquent\Model;
use Neo\Models\Utils\ViewModelBackedBuilder;

/**
 * This trait allows the model to read and write from different tables.
 * The `table` property of the model must specify the table from which data will be read.
 * A `write_table` property has to be set to specify onto which table to perform write operations
 *
 * @property string $write_table The table used for write operation. Opposite to the $table property used to read data
 * @mixin Model
 */
trait HasView {

    public function newEloquentBuilder($query) {
        return new ViewModelBackedBuilder($query); // TODO: Change the autogenerated stub
    }

    public function getTable() {
        return $this->getReadTable();
    }

    public function getWriteTable() {
        return $this->write_table;
    }

    public function getReadTable() {
        return $this->table;
    }

    public function qualifyColumn($column) {
        if (str_contains($column, '.')) {
            return $column;
        }

        return $this->getReadTable() . '.' . $column;
    }
}
